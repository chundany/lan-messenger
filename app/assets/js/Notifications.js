// Generated by CoffeeScript 1.10.0
(function() {
  var Notifications,
    slice = [].slice;

  Notifications = (function() {
    function Notifications(elem1) {
      this.elem = elem1;
      this;
    }

    Notifications.prototype.test = function() {
      setTimeout(((function(_this) {
        return function() {
          _this.add("connection", "error", "Connection lost to <b>UiServer</b> on <b>localhost</b>!");
          return _this.add("message-Anyone", "info", "New  from <b>Anyone</b>.");
        };
      })(this)), 1000);
      return setTimeout(((function(_this) {
        return function() {
          return _this.add("connection", "done", "<b>UiServer</b> connection recovered.", 5000);
        };
      })(this)), 3000);
    };

    Notifications.prototype.add = function(id, type, body, timeout) {
      var elem, i, len, ref, width;
      if (timeout == null) {
        timeout = 0;
      }
      id = id.replace(/[^A-Za-z0-9]/g, "");
      ref = $(".notification-" + id);
      for (i = 0, len = ref.length; i < len; i++) {
        elem = ref[i];
        this.close($(elem));
      }
      elem = $(".notification.template", this.elem).clone().removeClass("template");
      elem.addClass("notification-" + type).addClass("notification-" + id);
      if (type === "error") {
        $(".notification-icon", elem).html("!");
      } else if (type === "done") {
        $(".notification-icon", elem).html("<div class='icon-success'></div>");
      } else if (type === "ask") {
        $(".notification-icon", elem).html("?");
      } else {
        $(".notification-icon", elem).html("i");
      }
      if (typeof body === "string") {
        $(".body", elem).html("<span class='message'>" + body + "</span>");
      } else {
        $(".body", elem).html("").append(body);
      }
      elem.appendTo(this.elem);
      if (timeout) {
        $(".close", elem).remove();
        setTimeout(((function(_this) {
          return function() {
            return _this.close(elem);
          };
        })(this)), timeout);
      }
      width = elem.outerWidth();
      if (!timeout) {
        width += 20;
      }
      if (elem.outerHeight() > 55) {
        elem.addClass("long");
      }
      elem.css({
        "width": "50px",
        "transform": "scale(0.01)"
      });
      elem.animate({
        "scale": 1
      }, 800, "easeOutElastic");
      elem.animate({
        "width": width
      }, 700, "easeInOutCubic");
      $(".body", elem).cssLater("box-shadow", "0px 0px 5px rgba(0,0,0,0.1)", 1000);
      $(".close, .button", elem).on("click", (function(_this) {
        return function() {
          _this.close(elem);
          return false;
        };
      })(this));
      return $(".select", elem).on("click", (function(_this) {
        return function() {
          return _this.close(elem);
        };
      })(this));
    };

    Notifications.prototype.close = function(elem) {
      elem.stop().animate({
        "width": 0,
        "opacity": 0
      }, 700, "easeInOutCubic");
      return elem.slideUp(300, (function() {
        return elem.remove();
      }));
    };

    Notifications.prototype.log = function() {
      var args;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      return console.log.apply(console, ["[Notifications]"].concat(slice.call(args)));
    };

    return Notifications;

  })();

  window.Notifications = Notifications;

}).call(this);
